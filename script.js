document.addEventListener('DOMContentLoaded', function() {
    let slideIndex = 0;
    showSlides();

    function showSlides() {
        let slides = document.getElementsByClassName("mySlides");
        for (let i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";  
        }
        slideIndex++;
        if (slideIndex > slides.length) {slideIndex = 1}    
        slides[slideIndex-1].style.display = "block";  
        setTimeout(showSlides, 3000); // ƒê·ªïi ·∫£nh m·ªói 3 gi√¢y
    }

    const heartButton = document.getElementById('heartButton');
    heartButton.addEventListener('click', createHearts);

    function createHearts() {
        for (let i = 0; i < 10; i++) {
            setTimeout(() => {
                const heart = document.createElement('div');
                heart.classList.add('heart');
                heart.style.left = Math.random() * 100 + 'vw';
                heart.style.animationDuration = (Math.random() * 2 + 3) + 's';
                heart.innerHTML = '‚ù§Ô∏è';
                document.body.appendChild(heart);

                setTimeout(() => {
                    heart.remove();
                }, 5000);
            }, i * 100);
        }
    }

    createStars();
});

function createStars() {
    const starsContainer = document.querySelector('.stars');
    for (let i = 0; i < 100; i++) {
        const star = document.createElement('div');
        star.classList.add('star');
        star.style.left = `${Math.random() * 100}%`;
        star.style.top = `${Math.random() * 100}%`;
        star.style.animationDuration = `${Math.random() * 3 + 2}s`;
        star.style.animationDelay = `${Math.random() * 2}s`;
        starsContainer.appendChild(star);
    }
}

// Hi·ªáu ·ª©ng g√µ ch·ªØ
function typeMessage() {
    const messages = [
        "N∆°i n√†y v·∫´n l√† c·ªßa em.",
        'T·∫°m bi·ªát!',
        "C·ªè"
    ];
    const typedMessage = document.getElementById("typed-message");
    let messageIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    let typingSpeed = 100;

    function type() {
        const currentMessage = messages[messageIndex];
        if (isDeleting) {
            typedMessage.textContent = currentMessage.substring(0, charIndex - 1);
            charIndex--;
            typingSpeed = 50;
        } else {
            typedMessage.textContent = currentMessage.substring(0, charIndex + 1);
            charIndex++;
            typingSpeed = Math.random() * 100 + 50;
        }

        if (!isDeleting && charIndex === currentMessage.length) {
            isDeleting = true;
            typingSpeed = 1000; // T·∫°m d·ª´ng tr∆∞·ªõc khi x√≥a
        } else if (isDeleting && charIndex === 0) {
            isDeleting = false;
            messageIndex = (messageIndex + 1) % messages.length;
            typingSpeed = 500; // T·∫°m d·ª´ng tr∆∞·ªõc khi g√µ tin nh·∫Øn m·ªõi
        }

        setTimeout(type, typingSpeed);
    }

    type();
}

typeMessage();

// G·ªçi c√°c h√†m m·ªõi
document.addEventListener('DOMContentLoaded', function() {
    createFloatingHearts();
});

function createFloatingHearts() {
    const container = document.querySelector('.floating-hearts');
    if (!container) {
        return;
    }
    
    const heartCount = 20; // S·ªë l∆∞·ª£ng tr√°i tim

    for (let i = 0; i < heartCount; i++) {
        createHeart(container);
    }

    setInterval(() => {
        createHeart(container);
    }, 2000); // T·∫°o tr√°i tim m·ªõi m·ªói 2 gi√¢y
}

function createHeart(container) {
    const heart = document.createElement('div');
    heart.textContent = '‚ù§';
    heart.classList.add('floating-heart');
    heart.style.left = `${Math.random() * 100}%`;
    heart.style.animationDuration = `${Math.random() * 5 + 5}s`; // 5-10s
    heart.style.opacity = Math.random() * 0.5 + 0.5; // 0.5-1
    heart.style.fontSize = `${Math.random() * 20 + 30}px`; // 30-50px

    container.appendChild(heart);

    // X√≥a tr√°i tim sau khi animation k·∫øt th√∫c
    heart.addEventListener('animationend', () => {
        heart.remove();
    });
}

// Thay th·∫ø ƒëo·∫°n code n√†y ·ªü cu·ªëi file script.js
document.addEventListener('DOMContentLoaded', function() {
    let slideIndex = 0;
    showSlides();

    const heartButton = document.getElementById('heartButton');
    if (heartButton) {
        heartButton.addEventListener('click', createHearts);
    }

    createStars();
    countdown();
    typeMessage();
    setupMusicToggle();
    createFloatingHearts();
});

function setupQuiz() {
    const quizButton = document.getElementById('quizButton');
    const quizModal = document.createElement('div');
    quizModal.classList.add('quiz-modal');
    document.body.appendChild(quizModal);

    quizButton.addEventListener('click', () => {
        showQuiz();
    });

    function showQuiz() {
        const questions = [
            {
                question: "Ng√†y sinh c·ªßa V≈© ƒë·∫πp trai l√† ng√†y n√†o?",
                options: ["1/9/2005", "14/2/2005", "20/10/2005", "15/2/2005"],
                correctAnswer: 3 // Gi·∫£ s·ª≠ ƒë√°p √°n ƒë√∫ng l√† 14/2, b·∫°n c√≥ th·ªÉ thay ƒë·ªïi
            },
            {
                question: "M√≥n ƒÉn y√™u th√≠ch c·ªßa V≈© Provip l√† g√¨?",
                options: ["Ph·ªü", "B√∫n ch·∫£","C∆°m th·ªãt kho t√†u", "B√°nh m√¨"],
                correctAnswer: 2 // Gi·∫£ s·ª≠ ƒë√°p √°n ƒë√∫ng l√† Ph·ªü, b·∫°n c√≥ th·ªÉ thay ƒë·ªïi
            },
            {
                question: "Idol tik tok m√† V≈© ƒë·∫£m ƒëang th√≠ch l√† ai?",
                options: ["Tr√† Giang", "Pi Ti√™n", "Linh Th·ªè", "B√¨nh An"],
                correctAnswer: 0 
            },
            {
                question: "V≈© eo C·ªè h·ªçc tr∆∞·ªùng n√†o, ng√†nh g√¨?",
                options: ["Khum bi·∫øt", "PTIT,CNTT", "UET,CNTT", "Boi ph·ªë k·ªï"],
                correctAnswer: 1 
            },
            {
                question: "C√°i nh√¨n c·ªßa V≈© cuti v·ªõi hieu tuesday l√† g√¨?",
                options: ["ƒê·∫πp trai", "Ti·ªÉu tam","H√°t hay", "Eo C·ªè"],
                correctAnswer: 0
            },
            {
                question: "V≈© tuy·ªát v·ªùi c√≥ eooo C·ªè khumm?",
                options: ["Khum bi·∫øt", "Eooo", "Eooo nh·∫•t", "Eooo v√£i L"],
                correctAnswer: 3
            },
            {
                question: "V≈© chƒÉm ch·ªâ hay ƒë·ªçc truy·ªán n√†o nh·∫•tt?",
                options: ["Ki·∫øm Lai", "C·∫ßu Ma", "Ph√†m Nh√¢n Tu Ti√™n", "Quang √Çm Chi Ngo·∫°i"],
                correctAnswer: 2
            },
            {
                question: "∆Ø·ªõc m∆° c·ª•a V≈©... l√† g√¨?",
                options: ["T·ª∑ ph√∫ gi√†u c√≥", "Tu ti√™n gi·∫£", "L√†m si√™u nh√¢n", "Mafia Internet"],
                correctAnswer: 1 
            },
            {
                question: "M√¥n th·ªÉ thao n√†o m√† V≈© bla bla th√≠ch nh·∫•t?",
                options: ["ƒê√° b√¥n", "P√≠c c·∫ßu b√¥n", "ƒê√° f√≤ur", "Bi ƒëa pun l√°p"],
                correctAnswer: 3
            },
            {
                question: "ƒê·ªãa ƒëi·ªÉm n√†o m√† V≈© üî™ mu·ªën ƒë·∫øn?",
                options: ["Thi√™n Nam", "M·∫∑t TrƒÉng", "N∆°i ng·ªß th√≠ch nh·∫•t", "USA M·∫Ωo"],
                correctAnswer: 0
            },
            {
                question: "V≈© x·ªãn x√≤ th√≠ch nghe nh·∫°c c·ªßa ca sƒ© n√†o?",
                options: ["S·∫øp S∆°n T√πng M-TP khum ƒÉn v·∫£i", "ƒêen V√¢u ch·∫•ttt", "Low G thu·ªëc l√†o", "Jack 5 tri·ªáu b·ªè n·ªët Sol"],
                correctAnswer: 0
            },
            {
                question: "Idol th·ªÉ thao m√† V≈© cool ng·∫ßu th·∫ßn t∆∞·ª£ng l√† ai?",
                options: ["Cristiano Ronaldo", "Lionel Messi", "Michael Jordan", "Roger Federer"],
                correctAnswer: 0
            },
            {
                question: "V≈© bad boi th√≠ch lo·∫°i phim n√†o nh·∫•t?",
                options: ["Kinh d·ªã", "H√†nh ƒë·ªông", "H√†i", "L√£ng m·∫°n"],
                correctAnswer: 1
            },
            {
                question: "V≈© sugar daddy th√≠ch s·ª≠ d·ª•ng m·∫°ng x√£ h·ªôi n√†o nh·∫•t?",
                options: ["Facebook", "Instagram", "TikTok", "Zalo"],
                correctAnswer: 2
            },
            {
                question: "V≈© abcxyz c√≥ th√≥i quen d·∫≠y s·ªõm khumm?",
                options: ["C√≥", "Khumm", "Th·ªânh tho·∫£ng", "Ch∆∞a bao gi·ªù"],
                correctAnswer: 2
            },
            {
                question: "V≈© hehe th√≠ch s·ª≠ d·ª•ng h·ªá ƒëi·ªÅu h√†nh n√†o nh·∫•t?",
                options: ["Windows", "MacOS", "Android", "Linux"],
                correctAnswer: 3
            },
            {
                question: "V≈© dark mu·ªën s·ªëng ·ªü th√†nh ph·ªë n√†o?",
                options: ["H√† N·ªôi", "Ninh B√¨nh", "ƒê√† N·∫µng", "ƒê√† L·∫°t"],
                correctAnswer: 3
            },
            {
                question: "Lo√†i hoa n√†o l√† lo√†i hoa y√™u th√≠ch c·ªßa V≈© m·ªát roi nh√©?",
                options: ["Hoa h·ªìng", "Hoa c·∫©m t√∫ c·∫ßu", "Hoa sen", "Hoa C·ªè"],
                correctAnswer: 3
            },
            {
                question: "Th·ª©c u·ªëng y√™u th√≠ch c·ªßa V≈© hhh l√† g√¨?",
                options: ["N∆∞·ªõc ng·ªçt", "C√† ph√™", "C√°i g√¨ c≈©m u·ªëng", "Tr√† s·ªØa"],
                correctAnswer: 0
            },
            {
                question: "V≈© c√≥ th√≠ch nu√¥i th√∫ c∆∞ng khumm?",
                options: ["C√≥", "Khumm", "Ch·ªâ th√≠ch ch√≥", "Ch·ªâ th√≠ch m√®o"],
                correctAnswer: 0
            }
        ];

        let currentQuestion = 0;
        let score = 0;
        let quizCount = parseInt(localStorage.getItem('quizCount') || '0');
        let highScore = parseInt(localStorage.getItem('highScore') || '0');

        quizModal.innerHTML = `
            <div class="quiz-content">
                <span class="close-button">&times;</span>
                <h2>Quiz T√¨nh Eoo</h2>
                <div class="quiz-stats">
                    <p><span class="stat-label">S·ªë l·∫ßn l√†m quiz:</span> <span class="stat-value">${quizCount}</span></p>
                    <p><span class="stat-label">ƒêi·ªÉm cao nh·∫•t:</span> <span class="stat-value">${highScore}</span></p>
                </div>
                <div id="question"></div>
                <div id="options"></div>
                <button id="submit">Tr·∫£ l·ªùi</button>
            </div>
        `;

        const closeButton = quizModal.querySelector('.close-button');
        closeButton.onclick = closeQuiz;

        quizModal.style.display = "block";

        function displayQuestion() {
            const questionElement = document.getElementById('question');
            const optionsElement = document.getElementById('options');
            const submitButton = document.getElementById('submit');

            questionElement.textContent = questions[currentQuestion].question;
            optionsElement.innerHTML = '';

            questions[currentQuestion].options.forEach((option, index) => {
                const button = document.createElement('button');
                button.textContent = option;
                button.onclick = () => selectOption(index);
                optionsElement.appendChild(button);
            });

            submitButton.onclick = submitAnswer;
        }

        function selectOption(index) {
            const options = document.getElementById('options').children;
            for (let i = 0; i < options.length; i++) {
                options[i].style.backgroundColor = i === index ? '#ff6b6b' : '';
            }
        }

        function submitAnswer() {
            const selectedOption = document.querySelector('#options button[style*="background-color"]');
            if (selectedOption) {
                const selectedAnswer = Array.from(selectedOption.parentNode.children).indexOf(selectedOption);
                if (selectedAnswer === questions[currentQuestion].correctAnswer) {
                    score++;
                }
                currentQuestion++;
                if (currentQuestion < questions.length) {
                    displayQuestion();
                } else {
                    showResult();
                }
            } else {
                const messageElement = document.createElement('p');
                messageElement.textContent = 'C·ªè tr·∫£ l·ªùi ƒëii!';
                messageElement.style.color = '#ff4757';
                messageElement.style.fontWeight = 'bold';
                messageElement.style.textAlign = 'center';
                messageElement.style.marginTop = '10px';
                messageElement.style.animation = 'shake 0.5s ease-in-out';
                
                const optionsElement = document.getElementById('options');
                optionsElement.parentNode.insertBefore(messageElement, optionsElement.nextSibling);
                
                setTimeout(() => {
                    messageElement.remove();
                }, 2000);
            }
        }

        function showResult() {
            quizCount++;
            localStorage.setItem('quizCount', quizCount);
            if (score > highScore) {
                highScore = score;
                localStorage.setItem('highScore', highScore);
            }

            const quizContent = quizModal.querySelector('.quiz-content');
            quizContent.innerHTML = `
                <div id="result">
                    <h2>K·∫øt qu·∫£</h2>
                    <p class="score">C·ªè ƒë√£ tr·∫£ l·ªùi ƒë√∫ng ${score} / ${questions.length} c√¢u h·ªèi!</p>
                    <p>${getResultMessage(score)}</p>
                    <div class="quiz-stats">
                        <p><span class="stat-label">S·ªë l·∫ßn l√†m quiz:</span> <span class="stat-value">${quizCount}</span></p>
                        <p><span class="stat-label">ƒêi·ªÉm cao nh·∫•t:</span> <span class="stat-value">${highScore}</span></p>
                    </div>
                    <button onclick="closeQuiz()">ƒê√≥ng</button>
                </div>
            `;
        }

        function getResultMessage(score) {
            let message = "";
            if (score === questions.length) {
                message = "Tuy·ªát v·ªùi! C·ªè hi·ªÉu V≈© ƒë·∫πp trai r·∫•t r√µ!";
            } else if (score >= questions.length / 2) {
                message = "Kh√° t·ªët! C·ªè hi·ªÉu V≈© ƒë·∫πp trai kh√° r√µ, nh∆∞ng v·∫´n c√≤n ƒëi·ªÅu ƒë·ªÉ kh√°m ph√°!";
            } else {
                message = "ƒê·ª´ng bu·ªìn! ƒê√¢y l√† c∆° h·ªôi ƒë·ªÉ C·ªè t√¨m hi·ªÉu V≈© ƒë·∫πp trai nhi·ªÅu h∆°n!";
            }
            return `<p class="result-message">${message}</p>`;
        }

        displayQuestion();
    }
}

// Th√™m h√†m closeQuiz v√†o ph·∫°m vi to√†n c·ª•c
function closeQuiz() {
    document.querySelector('.quiz-modal').style.display = "none";
}

// Th√™m d√≤ng n√†y v√†o h√†m DOMContentLoaded
document.addEventListener('DOMContentLoaded', function() {
    // ... (code hi·ªán t·∫°i)
    setupQuiz();
});

// ƒêo·∫°n m√£ n√†y th√™m ch·ª©c nƒÉng ph√°t/d·ª´ng nh·∫°c n·ªÅn cho trang web
function setupMusicToggle() {
    const audio = document.getElementById('background-music');
    const musicToggle = document.getElementById('musicToggle');
    const musicIcon = musicToggle.querySelector('i');
    const musicText = musicToggle.querySelector('.sr-only');
    const playlist = document.getElementById('playlist');
    const playlistItems = playlist.querySelectorAll('li');

    let isPlaying = false;

    if (!audio || !musicToggle) {
        console.error('Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ audio ho·∫∑c n√∫t ƒëi·ªÅu khi·ªÉn nh·∫°c');
        return;
    }

    musicToggle.addEventListener('click', function() {
        if (isPlaying) {
            audio.pause();
            musicIcon.className = 'fas fa-play';
            musicText.textContent = 'Ph√°t nh·∫°c';
            musicToggle.classList.remove('playing');
            isPlaying = false;
        } else {
            if (playlist.style.display === 'none' || playlist.style.display === '') {
                playlist.style.display = 'block';
            } else {
                playlist.style.display = 'none';
            }
        }
    });

    playlistItems.forEach(item => {
        item.addEventListener('click', function() {
            const src = this.getAttribute('data-src');
            audio.src = src;
            audio.play().then(() => {
                musicIcon.className = 'fas fa-pause';
                musicText.textContent = 'D·ª´ng nh·∫°c';
                musicToggle.classList.add('playing');
                playlistItems.forEach(i => i.classList.remove('active'));
                this.classList.add('active');
                isPlaying = true;
            }).catch(error => {
                console.error('Kh√¥ng th·ªÉ ph√°t nh·∫°c:', error);
            });
            playlist.style.display = 'none';
        });
    });

    audio.addEventListener('ended', function() {
        musicIcon.className = 'fas fa-play';
        musicText.textContent = 'Ph√°t nh·∫°c';
        musicToggle.classList.remove('playing');
        isPlaying = false;
    });
}

// ƒê·∫£m b·∫£o g·ªçi h√†m setupMusicToggle() khi trang ƒë∆∞·ª£c t·∫£i
document.addEventListener('DOMContentLoaded', function() {
    // ... (rest of the code)
    setupMusicToggle();
});

function setupHoroscope() {
    const horoscopeButton = document.getElementById('horoscopeButton');
    const horoscopeModal = document.createElement('div');
    horoscopeModal.classList.add('horoscope-modal');
    document.body.appendChild(horoscopeModal);

    horoscopeButton.addEventListener('click', () => {
        showHoroscope();
    });

    function showHoroscope() {
        const coSign = "S∆∞ T·ª≠";
        const gioSign = "B·∫£o B√¨nh";

        horoscopeModal.innerHTML = `
            <div class="horoscope-content">
                <h2>Horoscope T√¨nh Eooo</h2>
                <div class="couple-info">
                    <div class="person-info">
                        <p>Gi√≥ üí® (${gioSign} - 15/02/2005)</p>
                        <img src="public/binh1.jpg" alt="Gi√≥" class="avatar">
                    </div>
                    <div class="beating-heart">‚ù§Ô∏è</div>
                    <div class="person-info">
                        <p>C·ªè üåø (${coSign} - 24/07/2006)</p>
                        <img src="public/co3.jpg" alt="C·ªè" class="avatar">
                </div>
                </div>
                <div class="horoscope-result">
                    <h3>1. ƒêi·ªÉm t∆∞∆°ng ƒë·ªìng trong t√≠nh c√°ch c·ªßa cung S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h3>
                    <p>M·∫∑c d√π S∆∞ T·ª≠ v√† B·∫£o B√¨nh thu·ªôc hai nh√≥m nguy√™n t·ªë kh√°c nhau (S∆∞ T·ª≠ thu·ªôc nguy√™n t·ªë L·ª≠a, trong khi Thi√™n B√¨nh thu·ªôc nh√≥m nguy√™n t·ªë Kh√≠) nh∆∞ng ·ªü h·ªç v·∫´n c√≥ m·ªôt s·ªë ƒëi·ªÉm t∆∞∆°ng ƒë·ªìng trong t√≠nh c√°ch nh∆∞ sau:<br></br>
                    <h5>Kh√¥ng th√≠ch d·ª±a d·∫´m v√†o ng∆∞·ªùi kh√°c:</h5> S∆∞ T·ª≠ v√† B·∫£o B√¨nh kh√¥ng th√≠ch b·ªã ph·ª• thu·ªôc v√†o b·∫•t k·ª≥ ai v√† mu·ªën t·ª± ƒë∆∞a ra quy·∫øt ƒë·ªãnh cho cu·ªôc s·ªëng c·ªßa m√¨nh.<br></br>
                    <h5>S·ªü h·ªØu tr√≠ s√°ng t·∫°o thi√™n b·∫©m:</h5> ƒêi·ªÉm ·∫•n t∆∞·ª£ng c·ªßa m·ªçi ng∆∞·ªùi khi l√†m vi·ªác c√πng hai ch√≤m sao n√†y ch√≠nh l√† tr√≠ t∆∞·ªüng t∆∞·ª£ng si√™u phong ph√∫. H·ªç th∆∞·ªùng c√≥ c√°i nh√¨n ƒë·ªôc ƒë√°o v√† kh·∫£ nƒÉng t∆∞ duy linh ho·∫°t, t·ª´ ƒë√≥ gi√∫p t·∫°o ra nh·ªØng √Ω t∆∞·ªüng m·ªõi v√† kh√°c bi·ªát.<br></br>
                    <h5>C√≥ ch√≠ ti·∫øn th·ªß, quy·∫øt t√¢m:</h5> L√† nh·ªØng ng∆∞·ªùi c√≥ d·ª± ƒë·ªãnh v√† ho√†i b√£o trong cu·ªôc s·ªëng, S∆∞ T·ª≠ v√† B·∫£o B√¨nh kh√¥ng ch·ªâ s·∫µn s√†ng ƒë·ªëi m·∫∑t v·ªõi m·ªçi kh√≥ khƒÉn, th√°ch th·ª©c ƒë·ªÉ ho√†n th√†nh m·ª•c ti√™u c·ªßa m√¨nh m√† c√≤n kh√¥ng ng·ª´ng t√¨m ki·∫øm nh·ªØng ki·∫øn th·ª©c, c∆° h·ªôi m·ªõi.<br></br>
                    <h5>D·ªÖ th√≠ch nghi:</h5> C·∫£ hai ch√≤m sao n√†y ƒë·ªÅu th√≠ch ·ª©ng nhanh ch√≥ng v·ªõi m·ªçi t√¨nh hu·ªëng. H·ªç c√≥ kh·∫£ nƒÉng ƒëi·ªÅu ch·ªânh k·∫ø ho·∫°ch v√† thay ƒë·ªïi chi·∫øn l∆∞·ª£c khi c·∫ßn thi·∫øt ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c k·∫øt qu·∫£ t·ªët nh·∫•t.<br></br>
                    <h5>Ki√™u ng·∫°o, qu√° ƒë·ªÅ cao b·∫£n th√¢n:</h5> B·∫£o B√¨nh v√† S∆∞ T·ª≠ th∆∞·ªùng t·ª± coi m√¨nh l√† "trung t√¢m c·ªßa v≈© tr·ª•" n√™n h·ªç s·∫Ω kh√¥ng d·ªÖ d√†ng nh√∫n nh∆∞·ªùng hay ch·ªãu ƒë·ª±ng l·ªùi ph√™ b√¨nh t·ª´ ng∆∞·ªùi kh√°c m√† cho r·∫±ng nh·ªØng l·ªùi n√≥i ƒë√≥ ch·ªâ l√† s·ª± ganh t·ªã m√† th√¥i. </p>

                    <h3>2. S∆∞ T·ª≠ c√≥ h·ª£p v·ªõi B·∫£o B√¨nh kh√¥ng? B√≥i m·ª©c ƒë·ªô h·ª£p nhau</h3>
                    <h4>2.1. T√¨nh y√™u gi·ªØa cung S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h4>
                    <h5>N·ªØ S∆∞ T·ª≠ v√† nam B·∫£o B√¨nh</h5>
                    <p>C√≥ th·ªÉ n√≥i, n·ªØ S∆∞ T·ª≠ v√† nam B·∫£o B√¨nh ch√≠nh l√† hai m·∫£nh gh√©p ho√†n h·∫£o d√†nh cho nhau. B·ªüi c·∫£ hai c√≥ kh√° nhi·ªÅu ƒë·∫∑c ƒëi·ªÉm t∆∞∆°ng ƒë·ªìng trong t√≠nh c√°ch. H·ªç ƒë·ªÅu r·∫•t s√¥i n·ªïi, h√≤a ƒë·ªìng v√† y√™u th√≠ch nh·ªØng b·ªØa ti·ªác t√πng s√¥i ƒë·ªông. Kh√¥ng ch·ªâ th·∫ø, h·ªç c√≤n lu√¥n bi·∫øt c√°ch t·∫°o s·ª± thi·ªán c·∫£m, y√™u m·∫øn v·ªõi m·ªçi ng∆∞·ªùi xung quanh.<br></br>
                    M·∫∑c d√π lu√¥n mang v·∫ª ngo√†i c√° t√≠nh, m·∫°nh m·∫Ω nh∆∞ng th·∫≠t s√¢u b√™n trong tr√°i tim n√†ng S∆∞ T·ª≠ v·∫´n ·∫©n ch·ª©a m·ªôt mong mu·ªën ƒë∆∞·ª£c b·∫£o v·ªá, che ch·ªü trong v√≤ng tay c·ªßa ng∆∞·ªùi m√¨nh y√™u. V√† ch√†ng trai B·∫£o B√¨nh ch·ªØng ƒë·∫°c, tr∆∞·ªüng th√†nh s·∫Ω l√† b·ªù vai v·ªØng ch·∫Øc cho n√†ng d·ª±a v√†o m·ªói khi kh√≥ khƒÉn, m·ªÅm y·∫øu.<br></br>
                    C·∫∑p ƒë√¥i n√†y kh√¥ng ch·ªâ ph√π h·ª£p trong chuy·ªán t√¨nh c·∫£m m√† c√≤n r·∫•t ƒÉn √Ω trong c√¥ng vi·ªác. Nh·ªØng √Ω t∆∞·ªüng c·ªßa hai ng∆∞·ªùi v√¥ c√πng ƒë·ªôc ƒë√°o v√† m·ªõi l·∫°. S·ª± b·∫£n lƒ©nh c·ªßa S∆∞ T·ª≠ v√† B·∫£o B√¨nh s·∫Ω gi√∫p h·ªç nhanh ch√≥ng ƒë·∫°t ƒë∆∞·ª£c cu·ªôc s·ªëng vi√™n m√£n m√† c·∫£ hai h·∫±ng mong ∆∞·ªõc.</p>
                    <h4>2.2. ƒê√°nh gi√° m·ª©c ƒë·ªô h·ª£p nhau gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh khi y√™u</h4>
                    <h5>M·ª©c ƒë·ªô tin t∆∞·ªüng gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h5>
                    <p>S·ª± tin t∆∞·ªüng kh√¥ng ph·∫£i v·∫•n ƒë·ªÅ ƒë√°ng lo ng·∫°i cho c·∫∑p ƒë√¥i B·∫£o B√¨nh v√† S∆∞ T·ª≠. C·∫£ hai ƒë·ªÅu tuy·ªát ƒë·ªëi tin t∆∞·ªüng v√† ·ªßng h·ªô m·ªçi quy·∫øt ƒë·ªãnh c·ªßa ƒë·ªëi ph∆∞∆°ng. B·ªüi h·ªç bi·∫øt r·∫±ng m·ªôt khi ƒë√£ y√™u, n·ª≠a kia s·∫Ω ho√†n to√†n h·∫øt l√≤ng v√¨ m·ªëi t√¨nh n√†y. Do ƒë√≥, t√¨nh y√™u gi·ªØa hai ng∆∞·ªùi s·∫Ω ng√†y c√†ng ph√°t tri·ªÉn l√†nh m·∫°nh v√† b·ªÅn l√¢u h∆°n.</p>
                    <h5>S·ª± giao ti·∫øp gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h5>
                    <p>Giao ti·∫øp c≈©ng l√† m·ªôt y·∫øu t·ªë quan tr·ªçng g√≥p ph·∫ßn x√¢y d·ª±ng m·ªôt m·ªëi quan h·ªá s√¢u s·∫Øc v√† l√¢u d√†i. T√≠nh c√°ch c·ªßa S∆∞ T·ª≠ v√† B·∫£o B√¨nh v·ªën r·∫•t th·∫≥ng th·∫Øn, ho·∫°t b√°t n√™n h·ªç d·ªÖ d√†ng chia s·∫ª v·ªõi nhau m·ªçi ƒëi·ªÅu nh·ªè nh·∫∑t trong cu·ªôc s·ªëng, t·ª´ b·∫°n b√®, gia ƒë√¨nh ƒë·∫øn h·ªçc t·∫≠p hay c√¥ng vi·ªác. ƒêi·ªÅu n√†y ƒë√£ t·∫°o n√™n m·ªôt s·ª£i d√¢y g·∫Øn k·∫øt gi√∫p h·ªç th·∫•u hi·ªÉu v√† c·∫£m th√¥ng v·ªõi ƒë·ªëi ph∆∞∆°ng h∆°n.</p>
                    <h5>C·∫£m x√∫c gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h5>
                    <p>M·ªëi t√¨nh c·ªßa S∆∞ T·ª≠ v√† B·∫£o B√¨nh s·∫Ω tr·∫£i qua v·ªõi nhi·ªÅu cung b·∫≠c c·∫£m x√∫c kh√°c nhau, l√∫c vui v·∫ª, l√∫c th√¨ tr·∫ßm l·∫∑ng. M·ªói c·∫£m x√∫c ƒë·ªÅu l√† m·ªôt gia v·ªã kh√¥ng th·ªÉ thi·∫øu ƒë·ªÉ t·∫°o n√™n m·ªôt h·∫°nh ph√∫c l√¢u d√†i.<br></br>
                    B·∫£o B√¨nh th∆∞·ªùng c·ªë g·∫Øng che gi·∫•u c·∫£m x√∫c th·∫≠t c·ªßa m√¨nh. Nh∆∞ng th·∫≠t t·ªët khi s·ª± ·∫•m √°p c·ªßa S∆∞ T·ª≠ ƒë√£ l√†m tan ch·∫£y nh·ªØng "t·∫£ng bƒÉng" l·∫°nh gi√° trong tr√°i tim B·∫£o B√¨nh. V√† s·∫Ω kh√¥ng c√≥ n∆°i n√†o an to√†n h∆°n ƒë·ªÉ chia s·∫ª t√¨nh c·∫£m c·ªßa m√¨nh ngo√†i v√≤ng tay c·ªßa ng∆∞·ªùi m√¨nh y√™u.<br></br>
                    S·ª± ng·ªçt ng√†o c·ªßa c·∫∑p ƒë√¥i n√†y s·∫Ω lu√¥n kh·∫Øc s√¢u trong t√¢m tr√≠ c·ªßa c·∫£ hai, d√π cho mai sau h·ªç kh√¥ng c√≤n chung b∆∞·ªõc n·ªØa.</p>
                    <h5>Quan ni·ªám s·ªëng c·ªßa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h5>
                    <p>Trong 12 cung ho√†ng ƒë·∫°o, S∆∞ T·ª≠ v√† B·∫£o B√¨nh l√† hai ch√≤m sao "hi·∫øm hoi" gi·ªëng nhau trong quan ƒëi·ªÉm s·ªëng. C·∫∑p ƒë√¥i n√†y lu√¥n mu·ªën nh·∫≠n ƒë∆∞·ª£c s·ª± c√¥ng nh·∫≠n v√† √°nh m·∫Øt ng∆∞·ª°ng m·ªô t·ª´ m·ªçi ng∆∞·ªùi xung quanh. V√¨ v·∫≠y, c·∫£ hai ƒë·ªÅu c√≥ r·∫•t nhi·ªÅu d·ª± ƒë·ªãnh v√† ho√†i b√£o trong cu·ªôc s·ªëng n√™n h·ªç c≈©ng mong mu·ªën ƒë∆∞·ª£c tr·∫£i nghi·ªám m·ªçi ƒëi·ªÅu hay ho, th√∫ v·ªã v√† chinh ph·ª•c nh·ªØng c·ªôt m·ªëc th√†nh c√¥ng m·ªõi.<br></br>
                    Khi c√πng chung m·ªôt m·ª•c ti√™u trong cu·ªôc s·ªëng, S∆∞ T·ª≠ v√† B·∫£o B√¨nh kh√¥ng ch·ªâ d·ª´ng l·∫°i ·ªü t√¨nh y√™u ƒë∆°n thu·∫ßn m√† c√≤n l√† ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh c·ªßa nhau tr√™n con ƒë∆∞·ªùng chinh ph·ª•c ∆∞·ªõc m∆° n·ªØa ƒë√≥ nha.</p>
                    <h5>Ho·∫°t ƒë·ªông chung gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h5>
                    <p>S∆∞ T·ª≠ v√† B·∫£o B√¨nh ƒë·ªÅu r·∫•t hay t√≤ m√≤ v√† hi·∫øu k·ª≥ v·ªÅ th·∫ø gi·ªõi xung quanh. Do ƒë√≥, h·ªç c√≥ th·ªÉ c√πng nhau th·ª±c hi·ªán m·ªôt v√†i ho·∫°t ƒë·ªông nh∆∞ ƒëi du l·ªãch, tham quan tri·ªÉn l√£m ngh·ªá thu·∫≠t ho·∫∑c tr·∫£i nghi·ªám c√°c l·ªÖ h·ªôi √¢m nh·∫°c s√¥i ƒë·ªông.<br></br>
                    B√™n c·∫°nh ƒë√≥, s·ª± t·ª± tin v√† kh√≠ ch·∫•t c·ªßa S∆∞ T·ª≠ c√πng v·ªõi c√°i nh√¨n ti√™n phong, ƒë·ªôc ƒë√°o c·ªßa B·∫£o B√¨nh s·∫Ω v√¥ c√πng th√≠ch h·ª£p ƒë·ªÉ c√πng nhau ƒë·ªìng h√†nh tr√™n con ƒë∆∞·ªùng s·ª± nghi·ªáp. H·ªç c√≥ th·ªÉ truy·ªÅn c·∫£m h·ª©ng v√† ƒë·ªông vi√™n nhau ƒë·ªÉ theo ƒëu·ªïi ∆∞·ªõc m∆° v√† m·ª•c ti√™u c√° nh√¢n.</p>

                    <h3>3. T√¨nh b·∫°n gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h3>
                    <p>D·∫•u hi·ªáu cho m·ªôt t√¨nh b·∫°n t·ªët ƒë√≥ ch√≠nh l√† c·∫£ hai ƒë·ªÅu c√≥ m·ªôt tr√°i tim v·ªã tha v√† ph√≥ng kho√°ng. S∆∞ T·ª≠ v√† B·∫£o B√¨nh lu√¥n t√¥n tr·ªçng s·ª± kh√°c bi·ªát gi·ªØa hai ng∆∞·ªùi. Ngo√†i ra, h·ªç c≈©ng th∆∞·ªùng xuy√™n t√¢m s·ª± v·ªõi nhau v·ªÅ nh·ªØng bu·ªìn vui, kh√≥ khƒÉn trong cu·ªôc s·ªëng n√™n t√¨nh b·∫°n gi·ªØa hai ng∆∞·ªùi s·∫Ω r·∫•t kh√≥ b·ªã r·∫°n n·ª©t v√† ng√†y c√†ng g·∫Øn b√≥ h∆°n. </p>

                    <h3>4. L·ªùi khuy√™n d√†nh cho m·ªëi quan h·ªá gi·ªØa S∆∞ T·ª≠ v√† B·∫£o B√¨nh</h3>
                    <p>ƒê√¥i khi, S∆∞ T·ª≠ th∆∞·ªùng t·ªè ra qu√° t·ª± tin m√† √°p ƒë·∫∑t m·ªçi mong mu·ªën c·ªßa m√¨nh l√™n t√¨nh y√™u c·ªßa c·∫£ hai. ƒêi·ªÅu n√†y v√¥ t√¨nh khi·∫øn B·∫£o B√¨nh c·∫£m th·∫•y √°p l·ª±c, m·ªát m·ªèi khi c·ª© ph·∫£i ch·∫°y theo "ti√™u chu·∫©n" c·ªßa ƒë·ªëi ph∆∞∆°ng.<br></br>
                    ƒê·ªÉ c·∫£i thi·ªán m·ªëi quan h·ªá gi·ªØa hai ng∆∞·ªùi tr·ªü n√™n t·ªët ƒë·∫πp h∆°n, S∆∞ T·ª≠ c·∫ßn h·ªçc c√°ch khi√™m t·ªën v√† quan t√¢m h∆°n ƒë·∫øn c·∫£m x√∫c c·ªßa n·ª≠a kia. C√≤n, B·∫£o B√¨nh n√™n d≈©ng c·∫£m trong vi·ªác th·ªÉ hi·ªán quan ƒëi·ªÉm ri√™ng c·ªßa m√¨nh v·ªõi ng∆∞·ªùi m√¨nh y√™u.</p>
                </div>
                <button id="closeHoroscope">ƒê√≥ng</button>
            </div>
        `;

        horoscopeModal.style.display = "block";

        document.getElementById('closeHoroscope').addEventListener('click', () => {
            horoscopeModal.style.display = "none";
        });
    }
}

document.addEventListener('DOMContentLoaded', function() {
    // ... (c√°c h√†m kh√°c)
    setupHoroscope();
});

// ... existing code ...

function countdown() {
    const loveStartDate = new Date('2024-03-01T23:27:00+07:00');
    
    function updateTimer() {
        const now = new Date();
        const difference = now - loveStartDate;

        const days = Math.floor(difference / (1000 * 60 * 60 * 24));
        const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((difference % (1000 * 60)) / 1000);

        document.getElementById('days').textContent = days.toString().padStart(2, '0');
        document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
        document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
        document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
    }

    updateTimer();
    setInterval(updateTimer, 1000);
}
document.addEventListener('DOMContentLoaded', function() {
    countdown();
});
